
    CREATE COLLATION russian (LOCALE = 'ru_RU.utf8');
        DROP TABLE IF EXISTS t_data; 
         
CREATE TABLE t_data (
  "data_id" SERIAL NOT NULL PRIMARY KEY 
  ,"date" timestamp DEFAULT NULL 
  ,"value" integer DEFAULT NULL 
  ,"string" varchar(64) DEFAULT NULL 
  ,"text" text DEFAULT NULL 
  ,"blob" bytea DEFAULT NULL 
  ,"real" float DEFAULT NULL 
  ,"dictionary_id" integer DEFAULT NULL 

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_data_text on t_data("text");
CREATE INDEX IF NOT EXISTS ix_t_data_dictionary_id on t_data("dictionary_id");
    DROP TABLE IF EXISTS t_dictionary; 
         
CREATE TABLE t_dictionary (
  "dictionary_id" SERIAL NOT NULL PRIMARY KEY 
  ,"text" varchar(64) DEFAULT NULL 

  
  

  )  ;
        DROP TABLE IF EXISTS t_link; 
         
CREATE TABLE t_link (
  "link_id" SERIAL NOT NULL PRIMARY KEY 
  ,"data_id" integer NOT NULL 
  ,"dictionary_id" integer NOT NULL 

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_link_data_id on t_link("data_id");
CREATE INDEX IF NOT EXISTS ix_t_link_dictionary_id on t_link("dictionary_id");
    DROP TABLE IF EXISTS t_another_link; 
         
CREATE TABLE t_another_link (
  "another_link_id" SERIAL NOT NULL PRIMARY KEY 
  ,"owner_id" integer NOT NULL 
  ,"child_id" integer NOT NULL 

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_another_link_owner_id on t_another_link("owner_id");
CREATE INDEX IF NOT EXISTS ix_t_another_link_child_id on t_another_link("child_id");
    DROP TABLE IF EXISTS t_base; 
         
CREATE TABLE t_base (
  "base_id" SERIAL NOT NULL PRIMARY KEY 
  ,"baseData" integer DEFAULT 0

  
  

  )  ;
        DROP TABLE IF EXISTS t_details; 
         
CREATE TABLE t_details (
  "details_id" SERIAL NOT NULL PRIMARY KEY 
  ,"base_id" integer NOT NULL 
  ,"detailsData" integer DEFAULT 0

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_details_base_id on t_details("base_id");
    DROP TABLE IF EXISTS t_subdetails; 
         
CREATE TABLE t_subdetails (
  "subdetails_id" SERIAL NOT NULL PRIMARY KEY 
  ,"details_id" integer NOT NULL 
  ,"subDetailsData" integer DEFAULT 0

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_subdetails_details_id on t_subdetails("details_id");
    DROP TABLE IF EXISTS t_propertiesOne; 
         
CREATE TABLE t_propertiesOne (
  "propertiesOne_id" SERIAL NOT NULL PRIMARY KEY 
  ,"base_id" integer NOT NULL 
  ,"propertiesOneData" integer DEFAULT 0

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_propertiesOne_base_id on t_propertiesOne("base_id");
    DROP TABLE IF EXISTS t_propertiesTwo; 
         
CREATE TABLE t_propertiesTwo (
  "propertiesTwo_id" SERIAL NOT NULL PRIMARY KEY 
  ,"base_id" integer NOT NULL 
  ,"propertiesTwoData" integer DEFAULT 0

  
  

  )  ;
    CREATE INDEX IF NOT EXISTS ix_t_propertiesTwo_base_id on t_propertiesTwo("base_id");
    DROP TABLE IF EXISTS t_dataNotNullable; 
         
CREATE TABLE t_dataNotNullable (
  "dataNotNullableId" SERIAL NOT NULL PRIMARY KEY 
  ,"valueA" varchar(255) DEFAULT ''
  ,"valueB" varchar(255) DEFAULT ''

  
  

  )  ;
        DROP TABLE IF EXISTS t_datatime; 
         
CREATE TABLE t_datatime (
  "datatime_id" SERIAL NOT NULL PRIMARY KEY 
  ,"value" timestamp DEFAULT NULL 

  
  

  )  ;
    
  ALTER TABLE t_data ADD CONSTRAINT c_t_data_dictionary_id FOREIGN KEY("dictionary_id")
    REFERENCES t_dictionary("dictionary_id")
    ;
  
  ALTER TABLE t_link ADD CONSTRAINT c_t_link_data_id FOREIGN KEY("data_id")
    REFERENCES t_data("data_id")
    ;
  
  ALTER TABLE t_link ADD CONSTRAINT c_t_link_dictionary_id FOREIGN KEY("dictionary_id")
    REFERENCES t_dictionary("dictionary_id") ON DELETE set null
    ;
  
  ALTER TABLE t_another_link ADD CONSTRAINT c_t_another_link_owner_id FOREIGN KEY("owner_id")
    REFERENCES t_data("data_id")
    ;
  
  ALTER TABLE t_another_link ADD CONSTRAINT c_t_another_link_child_id FOREIGN KEY("child_id")
    REFERENCES t_dictionary("dictionary_id") ON DELETE cascade
    ;
  
  ALTER TABLE t_details ADD CONSTRAINT c_t_details_base_id FOREIGN KEY("base_id")
    REFERENCES t_base("base_id") ON DELETE cascade
    ;
  
  ALTER TABLE t_subdetails ADD CONSTRAINT c_t_subdetails_details_id FOREIGN KEY("details_id")
    REFERENCES t_details("details_id") ON DELETE cascade
    ;
  
  ALTER TABLE t_propertiesOne ADD CONSTRAINT c_t_propertiesOne_base_id FOREIGN KEY("base_id")
    REFERENCES t_base("base_id") ON DELETE cascade
    ;
  
  ALTER TABLE t_propertiesTwo ADD CONSTRAINT c_t_propertiesTwo_base_id FOREIGN KEY("base_id")
    REFERENCES t_base("base_id") ON DELETE cascade
    ;
  